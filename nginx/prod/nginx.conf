# Cache zone
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

# redirect all traffic to https
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name _;

	location /.well-known/acme-challenge/ {
		root /var/www/certbot;
	}

	location / {
		root /var/www/certbot;
		return 301 https://$host$request_uri;
	}
}

# main server block
server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2;
    server_name localhost www.localhost;
    server_tokens off;

	# all ssl related config moved to ssl.conf
	# include /config/nginx/ssl.conf;

	ssl_certificate /etc/letsencrypt/live/.../fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/.../privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	
	ssl_stapling on;
	ssl_stapling_verify on;

	# assets, media
	location ~* \.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ {
		proxy_set_header    Host                $http_host;
		proxy_set_header    X-Real-IP           $remote_addr;
		proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
		# proxy_pass 'http://backend:8000';
	}

	# svg, fonts
	location ~* \.(?:svgz?|ttf|ttc|otf|eot|woff2?)$ {
		proxy_pass http://client:3000;
		add_header Access-Control-Allow-Origin "*";
		expires 7d;
		access_log off;
	}

	location / {
		 proxy_pass        http://client:3000;
		 proxy_redirect    default;
		 proxy_set_header  Upgrade $http_upgrade;
		 proxy_set_header  Connection "upgrade";
		 proxy_set_header  Host $host;
		 proxy_set_header  X-Real-IP $remote_addr;
		 proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
		 proxy_set_header  X-Forwarded-Host $server_name;
		 proxy_set_header  X-Forwarded-Proto $scheme;

		 add_header Cache-Control "no-cache, no-store, must-revalidate" always;
	}
}